version: '3.7'
services:
    reverse-proxy:
      image: traefik:v2.10
      command: 
        - --api.insecure=true 
        - --providers.docker
        - --accesslog=true
        - --log.level=DEBUG
        - "--providers.docker.exposedbydefault=false"
      ports:
        - "80:80"
        - "8080:8080"
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock

    drone:
        volumes:
          - "./drone-data:/data"
        environment:
          - DRONE_AGENTS_ENABLED=true
          - DRONE_GOGS_SERVER=http://gogs:3000
          - DRONE_RPC_SECRET=super-duper-secret
          - DRONE_SERVER_HOST=drone
          - DRONE_LOGS_DEBUG=true
          - DRONE_COOKIE_SECRET=correct-horse-battery-staple
        labels:  
          - traefik.enable=true
          - traefik.http.routers.drone.rule=Host(`drone.172.20.26.51.nip.io`)
          - traefik.http.services.drone.loadbalancer.server.port=80
        container_name: drone
        image: "drone/drone:2"

    drone-runner-docker:
        volumes:
          - "/var/run/docker.sock:/var/run/docker.sock"
        environment:
          - DRONE_RPC_HOST=drone
          - DRONE_RPC_SECRET=super-duper-secret
          - DRONE_RUNNER_CAPACITY=2
          - DRONE_RUNNER_NAME=my-first-runner
        ports:
            - "3000:3000"
        container_name: runner
        image: "drone/drone-runner-docker:1"

    gogs:
        image: gogs/gogs:latest
        volumes:
          - "./data:/data"
        labels:  
          - traefik.enable=true
          - traefik.http.routers.gogs.rule=Host(`gogs.172.20.26.51.nip.io`)
          - traefik.http.services.gogs.loadbalancer.server.port=3000
